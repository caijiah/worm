#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 5.3.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 29 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 29 #"drscheme:bindings-snipclass%\0"
1 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 33 #"(lib \"bullet-snip.ss\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 54 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 37
#"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 34 139 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 176 48 96 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1           0 2762 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 175
(
 #"#reader(lib \"htdp-intermediate-reader.ss\" \"lang\")((modname worm)"
 #" (read-case-sensitive #t) (teachpacks ()) (htdp-settings #(#t constr"
 #"uctor repeating-decimal #f #t none #f ())))"
) 0 0 4 29 1 #"\n"
0 0 17 3 13 #"; Ian Kampine"
0 0 22 29 1 #"\n"
0 0 17 3 11 #"; Form VIIB"
0 0 22 29 1 #"\n"
0 0 17 3 8 #"; CPD II"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 18 #"; ----------------"
0 0 22 29 1 #"\n"
0 0 17 3 18 #"; | WORM PROJECT |"
0 0 22 29 1 #"\n"
0 0 17 3 18 #"; ----------------"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 13 #"; REQUIRES..."
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 22 3 1 #" "
0 0 14 3 14 #"2htdp/universe"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 7 #"require"
0 0 22 3 1 #" "
0 0 14 3 11 #"2htdp/image"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 66
#";-----------------------------------------------------------------"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 21 #"; NUMERICAL CONSTANTS"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 9 #"GRID-SIZE"
0 0 22 3 1 #" "
0 0 20 3 2 #"20"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 13 #"CELL-DIAMETER"
0 0 22 3 1 #" "
0 0 20 3 2 #"40"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 10 #"WORLD-SIZE"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 22 3 1 #" "
0 0 14 3 9 #"GRID-SIZE"
0 0 22 3 1 #" "
0 0 14 3 13 #"CELL-DIAMETER"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 6 #"CENTER"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 22 3 1 #" "
0 0 14 3 10 #"WORLD-SIZE"
0 0 22 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 13 #"TICK-INTERVAL"
0 0 22 3 1 #" "
0 0 20 3 3 #"0.2"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 67
#";------------------------------------------------------------------"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 21 #"; GRAPHICAL CONSTANTS"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 105
(
 #"; (define HEAD (circle CELL-DIAMETER \"solid\" \"pink\")) <--- work "
 #"out more advanced render system for later"
) 0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 7 #"SEGMENT"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"circle"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 22 3 1 #" "
0 0 14 3 13 #"CELL-DIAMETER"
0 0 22 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 22 3 1 #" "
0 0 19 3 5 #"\"red\""
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 4 #"FOOD"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"circle"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"/"
0 0 22 3 1 #" "
0 0 14 3 13 #"CELL-DIAMETER"
0 0 22 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 19 3 7 #"\"solid\""
0 0 22 3 1 #" "
0 0 19 3 7 #"\"green\""
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 5 #"WORLD"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"empty-scene"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 22 3 1 #" "
0 0 14 3 9 #"GRID-SIZE"
0 0 22 3 1 #" "
0 0 14 3 13 #"CELL-DIAMETER"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 22 3 1 #" "
0 0 14 3 9 #"GRID-SIZE"
0 0 22 3 1 #" "
0 0 14 3 13 #"CELL-DIAMETER"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 69
(
 #";-------------------------------------------------------------------"
 #"-"
) 0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 12 #"; STRUCTURES"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 22 3 1 #" "
0 0 14 3 7 #"segment"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"posn"
0 0 22 3 1 #" "
0 0 14 3 9 #"direction"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 22 3 1 #" "
0 0 14 3 4 #"food"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"posn"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 22 3 1 #" "
0 0 14 3 5 #"world"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"food"
0 0 22 3 1 #" "
0 0 14 3 4 #"worm"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 27 #";--------------------------"
0 0 17 3 41 #"-----------------------------------------"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 20 #"; INITIAL GAME STATE"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 13 #"INITIAL-STATE"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-world"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-food"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 22 3 1 #" "
0 0 20 3 2 #"20"
0 0 22 3 1 #" "
0 0 20 3 2 #"20"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"make-segment"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 22 3 1 #" "
0 0 14 3 6 #"CENTER"
0 0 22 3 1 #" "
0 0 14 3 6 #"CENTER"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 18 #"; TEST GAME STATES"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 14 3 12 #"TEST-STATE-1"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-world"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-food"
0 0 22 3 2 #" ("
0 0 14 3 9 #"make-posn"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 20 3 1 #"2"
0 0 20 3 1 #"0"
0 0 22 3 1 #" "
0 0 20 3 3 #"120"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 3 47 #"                                               "
0 0 22 3 1 #"("
0 0 14 3 4 #"list"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"make-segment"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 22 3 1 #" "
0 0 14 3 6 #"CENTER"
0 0 22 3 1 #" "
0 0 14 3 6 #"CENTER"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 3 53 #"                                                     "
0 0 22 3 1 #"("
0 0 14 3 12 #"make-segment"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 22 3 1 #" "
0 0 14 3 6 #"CENTER"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 22 3 1 #" "
0 0 14 3 6 #"CENTER"
0 0 22 3 1 #" "
0 0 14 3 13 #"CELL-DIAMETER"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 53 #"                                                     "
0 0 22 3 1 #"("
0 0 14 3 12 #"make-segment"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 22 3 1 #" "
0 0 14 3 6 #"CENTER"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 22 3 1 #" "
0 0 14 3 6 #"CENTER"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 22 3 1 #" "
0 0 14 3 13 #"CELL-DIAMETER"
0 0 22 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 53 #"                                                     "
0 0 22 3 1 #"("
0 0 14 3 12 #"make-segment"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 22 3 1 #" "
0 0 14 3 6 #"CENTER"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 22 3 1 #" "
0 0 14 3 6 #"CENTER"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 22 3 1 #" "
0 0 14 3 13 #"CELL-DIAMETER"
0 0 22 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 53 #"                                                     "
0 0 22 3 1 #"("
0 0 14 3 12 #"make-segment"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 22 3 1 #" "
0 0 14 3 6 #"CENTER"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 22 3 1 #" "
0 0 14 3 6 #"CENTER"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 22 3 1 #" "
0 0 14 3 13 #"CELL-DIAMETER"
0 0 22 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 53 #"                                                     "
0 0 22 3 1 #"("
0 0 14 3 12 #"make-segment"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 22 3 1 #" "
0 0 14 3 6 #"CENTER"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 22 3 1 #" "
0 0 14 3 6 #"CENTER"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 22 3 1 #" "
0 0 14 3 13 #"CELL-DIAMETER"
0 0 22 3 1 #" "
0 0 20 3 1 #"5"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 19 3 6 #"\"down\""
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 69
(
 #";-------------------------------------------------------------------"
 #"-"
) 0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 18 #"; DATA DEFINITIONS"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 37 #"; A direction is one of the following"
0 0 22 29 1 #"\n"
0 0 17 3 6 #"; - up"
0 0 22 29 1 #"\n"
0 0 17 3 9 #"; - right"
0 0 22 29 1 #"\n"
0 0 17 3 8 #"; - left"
0 0 22 29 1 #"\n"
0 0 17 3 8 #"; - down"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 33 #"; A worm is one of the following:"
0 0 22 29 1 #"\n"
0 0 17 3 24 #"; - (cons segment empty)"
0 0 22 29 1 #"\n"
0 0 17 3 23 #"; - (cons segment worm)"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 69
(
 #";-------------------------------------------------------------------"
 #"-"
) 0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 11 #"; FUNCTIONS"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 25 #"; segment, image -> image"
0 0 22 29 1 #"\n"
0 0 17 3 70
(
 #"; renders an image containing the segment from a given segment and t"
 #"he"
) 0 0 22 29 1 #"\n"
0 0 17 3 22 #"; rendered world image"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 2 #" ("
0 0 14 3 14 #"render-segment"
0 0 22 3 1 #" "
0 0 14 3 5 #"segin"
0 0 22 3 1 #" "
0 0 14 3 7 #"worldin"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 3 1 #"("
0 0 15 3 3 #"let"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #"("
0 0 22 3 1 #"["
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"posn"
0 0 14 3 1 #"-"
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"segment-po"
0 0 14 3 1 #"s"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 14 3 3 #"seg"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"   "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 1 #"y"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"posn"
0 0 14 3 1 #"-"
0 0 14 3 1 #"y"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"segment-po"
0 0 14 3 1 #"s"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 14 3 3 #"seg"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"place-ima"
0 0 14 3 1 #"g"
0 0 14 3 1 #"e"
0 0 22 3 1 #" "
0 0 14 3 5 #"SEGME"
0 0 14 3 1 #"N"
0 0 14 3 1 #"T"
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #" "
0 0 14 3 1 #"w"
0 0 14 3 2 #"or"
0 0 14 3 1 #"l"
0 0 14 3 1 #"d"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 13 #"; worm -> ima"
0 0 17 3 1 #"g"
0 0 17 3 1 #"e"
0 0 22 29 1 #"\n"
0 0 17 3 53 #"; renders a world containing the worm from a given wo"
0 0 17 3 1 #"r"
0 0 17 3 1 #"m"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 4 #"defi"
0 0 15 3 1 #"n"
0 0 15 3 1 #"e"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"render-wo"
0 0 14 3 1 #"r"
0 0 14 3 1 #"m"
0 0 22 3 1 #" "
0 0 14 3 4 #"worm"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 2 #"co"
0 0 15 3 2 #"nd"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 22 3 1 #"("
0 0 14 3 4 #"empt"
0 0 14 3 1 #"y"
0 0 14 3 1 #"?"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"re"
0 0 14 3 1 #"s"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 14 3 4 #"worm"
0 0 14 3 2 #"in"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"render-segme"
0 0 14 3 1 #"n"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"fir"
0 0 14 3 1 #"s"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 14 3 4 #"worm"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 14 3 3 #"WOR"
0 0 14 3 1 #"L"
0 0 14 3 1 #"D"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 2 #"el"
0 0 14 3 1 #"s"
0 0 14 3 1 #"e"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"render-segme"
0 0 14 3 1 #"n"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"fir"
0 0 14 3 1 #"s"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 14 3 4 #"worm"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 26 #"                          "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"render-wo"
0 0 14 3 1 #"r"
0 0 14 3 1 #"m"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"re"
0 0 14 3 1 #"s"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 14 3 4 #"worm"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 20 #"; world state -> ima"
0 0 17 3 1 #"g"
0 0 17 3 1 #"e"
0 0 22 29 1 #"\n"
0 0 17 3 48 #"; renders the whole world from a given world sta"
0 0 17 3 1 #"t"
0 0 17 3 1 #"e"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 4 #"defi"
0 0 15 3 1 #"n"
0 0 15 3 1 #"e"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"render-wor"
0 0 14 3 1 #"l"
0 0 14 3 1 #"d"
0 0 22 3 1 #" "
0 0 14 3 5 #"world"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 2 #"le"
0 0 15 3 2 #"t*"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 22 3 1 #"["
0 0 14 3 2 #"wo"
0 0 14 3 1 #"r"
0 0 14 3 1 #"m"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"world-wo"
0 0 14 3 1 #"r"
0 0 14 3 1 #"m"
0 0 22 3 1 #" "
0 0 14 3 5 #"world"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 2 #"fo"
0 0 14 3 1 #"o"
0 0 14 3 1 #"d"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"world-fo"
0 0 14 3 1 #"o"
0 0 14 3 1 #"d"
0 0 22 3 1 #" "
0 0 14 3 5 #"world"
0 0 14 3 2 #"in"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"render-wo"
0 0 14 3 1 #"r"
0 0 14 3 1 #"m"
0 0 22 3 1 #" "
0 0 14 3 2 #"wo"
0 0 14 3 1 #"r"
0 0 14 3 1 #"m"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 12 #"; list -> li"
0 0 17 3 1 #"s"
0 0 17 3 1 #"t"
0 0 22 29 1 #"\n"
0 0 17 3 39 #"; Returns a list without the last eleme"
0 0 17 3 1 #"n"
0 0 17 3 1 #"t"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 4 #"defi"
0 0 15 3 1 #"n"
0 0 15 3 1 #"e"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"worm-e"
0 0 14 3 1 #"b"
0 0 14 3 1 #"l"
0 0 22 3 1 #" "
0 0 14 3 4 #"worm"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"rever"
0 0 14 3 1 #"s"
0 0 14 3 1 #"e"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"re"
0 0 14 3 1 #"s"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 5 #"rever"
0 0 14 3 1 #"s"
0 0 14 3 1 #"e"
0 0 22 3 1 #" "
0 0 14 3 4 #"worm"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 16 #"; testing worm-e"
0 0 17 3 1 #"b"
0 0 17 3 1 #"l"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 10 #"check-expe"
0 0 14 3 1 #"c"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"worm-e"
0 0 14 3 1 #"b"
0 0 14 3 1 #"l"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"li"
0 0 14 3 1 #"s"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"li"
0 0 14 3 1 #"s"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 12 #"; list -> li"
0 0 17 3 1 #"s"
0 0 17 3 1 #"t"
0 0 22 29 1 #"\n"
0 0 17 3 34 #"; Returns the last element of a li"
0 0 17 3 1 #"s"
0 0 17 3 1 #"t"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 4 #"defi"
0 0 15 3 1 #"n"
0 0 15 3 1 #"e"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"worm-la"
0 0 14 3 1 #"s"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 14 3 4 #"worm"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 2 #"co"
0 0 15 3 2 #"nd"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 22 3 1 #"("
0 0 14 3 4 #"empt"
0 0 14 3 1 #"y"
0 0 14 3 1 #"?"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"re"
0 0 14 3 1 #"s"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 14 3 4 #"worm"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 14 3 4 #"worm"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 2 #"el"
0 0 14 3 1 #"s"
0 0 14 3 1 #"e"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"worm-la"
0 0 14 3 1 #"s"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"re"
0 0 14 3 1 #"s"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 14 3 4 #"worm"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 17 #"; testing worm-la"
0 0 17 3 1 #"s"
0 0 17 3 1 #"t"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 10 #"check-expe"
0 0 14 3 1 #"c"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"worm-la"
0 0 14 3 1 #"s"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"li"
0 0 14 3 1 #"s"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #" "
0 0 20 3 1 #"2"
0 0 22 3 1 #" "
0 0 20 3 1 #"3"
0 0 22 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"li"
0 0 14 3 1 #"s"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 20 3 1 #"4"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 12 #"; worm -> wo"
0 0 17 3 1 #"r"
0 0 17 3 1 #"m"
0 0 22 29 1 #"\n"
0 0 17 3 45 #"; update's the worm's position within the wor"
0 0 17 3 1 #"l"
0 0 17 3 1 #"d"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 4 #"defi"
0 0 15 3 1 #"n"
0 0 15 3 1 #"e"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"update-wo"
0 0 14 3 1 #"r"
0 0 14 3 1 #"m"
0 0 22 3 1 #" "
0 0 14 3 4 #"worm"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 2 #"co"
0 0 15 3 2 #"nd"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 22 3 1 #"("
0 0 14 3 1 #"<"
0 0 14 3 1 #"="
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"leng"
0 0 14 3 1 #"t"
0 0 14 3 1 #"h"
0 0 22 3 1 #" "
0 0 14 3 4 #"worm"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 20 3 1 #"1"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"li"
0 0 14 3 1 #"s"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"update-he"
0 0 14 3 1 #"a"
0 0 14 3 1 #"d"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"fir"
0 0 14 3 1 #"s"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 14 3 4 #"worm"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 2 #"el"
0 0 14 3 1 #"s"
0 0 14 3 1 #"e"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 2 #"le"
0 0 15 3 2 #"t*"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 22 3 1 #"["
0 0 14 3 7 #"worm-he"
0 0 14 3 1 #"a"
0 0 14 3 1 #"d"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"fir"
0 0 14 3 1 #"s"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 14 3 4 #"worm"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 7 #"worm-ta"
0 0 14 3 1 #"i"
0 0 14 3 1 #"l"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"worm-e"
0 0 14 3 1 #"b"
0 0 14 3 1 #"l"
0 0 22 3 1 #" "
0 0 14 3 4 #"worm"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 10 #"          "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"co"
0 0 14 3 1 #"n"
0 0 14 3 1 #"s"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"update-he"
0 0 14 3 1 #"a"
0 0 14 3 1 #"d"
0 0 22 3 1 #" "
0 0 14 3 7 #"worm-he"
0 0 14 3 1 #"a"
0 0 14 3 1 #"d"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 14 3 7 #"worm-ta"
0 0 14 3 1 #"i"
0 0 14 3 1 #"l"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 14 #"; world -> wor"
0 0 17 3 1 #"l"
0 0 17 3 1 #"d"
0 0 22 29 1 #"\n"
0 0 17 3 16 #"; update the wor"
0 0 17 3 1 #"l"
0 0 17 3 1 #"d"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 4 #"defi"
0 0 15 3 1 #"n"
0 0 15 3 1 #"e"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"update-wor"
0 0 14 3 1 #"l"
0 0 14 3 1 #"d"
0 0 22 3 1 #" "
0 0 14 3 5 #"world"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 2 #"le"
0 0 15 3 2 #"t*"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 22 3 1 #"["
0 0 14 3 2 #"wo"
0 0 14 3 1 #"r"
0 0 14 3 1 #"m"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"world-wo"
0 0 14 3 1 #"r"
0 0 14 3 1 #"m"
0 0 22 3 1 #" "
0 0 14 3 5 #"world"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"   "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 2 #"fo"
0 0 14 3 1 #"o"
0 0 14 3 1 #"d"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"world-fo"
0 0 14 3 1 #"o"
0 0 14 3 1 #"d"
0 0 22 3 1 #" "
0 0 14 3 5 #"world"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-wor"
0 0 14 3 1 #"l"
0 0 14 3 1 #"d"
0 0 22 3 1 #" "
0 0 14 3 2 #"fo"
0 0 14 3 1 #"o"
0 0 14 3 1 #"d"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"update-wo"
0 0 14 3 1 #"r"
0 0 14 3 1 #"m"
0 0 22 3 1 #" "
0 0 14 3 2 #"wo"
0 0 14 3 1 #"r"
0 0 14 3 1 #"m"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 18 #"; segment -> segme"
0 0 17 3 1 #"n"
0 0 17 3 1 #"t"
0 0 22 29 1 #"\n"
0 0 17 3 35 #"; updates the head segment's positi"
0 0 17 3 1 #"o"
0 0 17 3 1 #"n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 4 #"defi"
0 0 15 3 1 #"n"
0 0 15 3 1 #"e"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"update-he"
0 0 14 3 1 #"a"
0 0 14 3 1 #"d"
0 0 22 3 1 #" "
0 0 14 3 3 #"seg"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 2 #"le"
0 0 15 3 2 #"t*"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 22 3 1 #"["
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"posn"
0 0 14 3 1 #"-"
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"segment-po"
0 0 14 3 1 #"s"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 14 3 3 #"seg"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 1 #"y"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"posn"
0 0 14 3 1 #"-"
0 0 14 3 1 #"y"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"segment-po"
0 0 14 3 1 #"s"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 14 3 3 #"seg"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 9 #"segment-d"
0 0 14 3 1 #"i"
0 0 14 3 1 #"r"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 15 #"segment-directi"
0 0 14 3 1 #"o"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 14 3 3 #"seg"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 2 #"co"
0 0 15 3 2 #"nd"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 22 3 1 #"("
0 0 14 3 6 #"string"
0 0 14 3 1 #"="
0 0 14 3 1 #"?"
0 0 22 3 1 #" "
0 0 14 3 9 #"segment-d"
0 0 14 3 1 #"i"
0 0 14 3 1 #"r"
0 0 22 3 1 #" "
0 0 19 3 2 #"\"u"
0 0 19 3 1 #"p"
0 0 19 3 1 #"\""
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-segme"
0 0 14 3 1 #"n"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"make-po"
0 0 14 3 1 #"s"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 22 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #" "
0 0 14 3 11 #"CELL-DIAMET"
0 0 14 3 1 #"E"
0 0 14 3 1 #"R"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 14 3 9 #"segment-d"
0 0 14 3 1 #"i"
0 0 14 3 1 #"r"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 22 3 1 #"("
0 0 14 3 6 #"string"
0 0 14 3 1 #"="
0 0 14 3 1 #"?"
0 0 22 3 1 #" "
0 0 14 3 9 #"segment-d"
0 0 14 3 1 #"i"
0 0 14 3 1 #"r"
0 0 22 3 1 #" "
0 0 19 3 4 #"\"dow"
0 0 19 3 1 #"n"
0 0 19 3 1 #"\""
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-segme"
0 0 14 3 1 #"n"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"make-po"
0 0 14 3 1 #"s"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 22 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #" "
0 0 14 3 11 #"CELL-DIAMET"
0 0 14 3 1 #"E"
0 0 14 3 1 #"R"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 14 3 9 #"segment-d"
0 0 14 3 1 #"i"
0 0 14 3 1 #"r"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 22 3 1 #"("
0 0 14 3 6 #"string"
0 0 14 3 1 #"="
0 0 14 3 1 #"?"
0 0 22 3 1 #" "
0 0 14 3 9 #"segment-d"
0 0 14 3 1 #"i"
0 0 14 3 1 #"r"
0 0 22 3 1 #" "
0 0 19 3 4 #"\"lef"
0 0 19 3 1 #"t"
0 0 19 3 1 #"\""
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-segme"
0 0 14 3 1 #"n"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"make-po"
0 0 14 3 1 #"s"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"-"
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 14 3 11 #"CELL-DIAMET"
0 0 14 3 1 #"E"
0 0 14 3 1 #"R"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 14 3 9 #"segment-d"
0 0 14 3 1 #"i"
0 0 14 3 1 #"r"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 22 3 1 #"("
0 0 14 3 6 #"string"
0 0 14 3 1 #"="
0 0 14 3 1 #"?"
0 0 22 3 1 #" "
0 0 14 3 9 #"segment-d"
0 0 14 3 1 #"i"
0 0 14 3 1 #"r"
0 0 22 3 1 #" "
0 0 19 3 5 #"\"righ"
0 0 19 3 1 #"t"
0 0 19 3 1 #"\""
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-segme"
0 0 14 3 1 #"n"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 7 #"make-po"
0 0 14 3 1 #"s"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"+"
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 14 3 11 #"CELL-DIAMET"
0 0 14 3 1 #"E"
0 0 14 3 1 #"R"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 14 3 9 #"segment-d"
0 0 14 3 1 #"i"
0 0 14 3 1 #"r"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 14 #"; World -> wor"
0 0 17 3 1 #"l"
0 0 17 3 1 #"d"
0 0 22 29 1 #"\n"
0 0 17 3 82
(
 #"; Determines what key has been pressed and changes the worm's direct"
 #"ion accordingl"
) 0 0 17 3 1 #"y"
0 0 17 3 1 #"."
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 4 #"defi"
0 0 15 3 1 #"n"
0 0 15 3 1 #"e"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"check-ke"
0 0 14 3 1 #"y"
0 0 14 3 1 #"s"
0 0 22 3 1 #" "
0 0 14 3 5 #"world"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 14 3 1 #"k"
0 0 14 3 1 #"e"
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 2 #"le"
0 0 15 3 2 #"t*"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 22 3 1 #"["
0 0 14 3 7 #"head-po"
0 0 14 3 1 #"s"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"segment-po"
0 0 14 3 1 #"s"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"fir"
0 0 14 3 1 #"s"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"world-wo"
0 0 14 3 1 #"r"
0 0 14 3 1 #"m"
0 0 22 3 1 #" "
0 0 14 3 5 #"world"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 2 #"fo"
0 0 14 3 1 #"o"
0 0 14 3 1 #"d"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"world-fo"
0 0 14 3 1 #"o"
0 0 14 3 1 #"d"
0 0 22 3 1 #" "
0 0 14 3 5 #"world"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 7 #"worm-ta"
0 0 14 3 1 #"i"
0 0 14 3 1 #"l"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"re"
0 0 14 3 1 #"s"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"world-wo"
0 0 14 3 1 #"r"
0 0 14 3 1 #"m"
0 0 22 3 1 #" "
0 0 14 3 5 #"world"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 2 #"co"
0 0 15 3 2 #"nd"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 22 3 1 #"("
0 0 14 3 3 #"key"
0 0 14 3 1 #"="
0 0 14 3 1 #"?"
0 0 22 3 1 #" "
0 0 14 3 1 #"k"
0 0 14 3 1 #"e"
0 0 14 3 1 #"y"
0 0 22 3 1 #" "
0 0 19 3 2 #"\"u"
0 0 19 3 1 #"p"
0 0 19 3 1 #"\""
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-wor"
0 0 14 3 1 #"l"
0 0 14 3 1 #"d"
0 0 22 3 1 #" "
0 0 14 3 2 #"fo"
0 0 14 3 1 #"o"
0 0 14 3 1 #"d"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"co"
0 0 14 3 1 #"n"
0 0 14 3 1 #"s"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-segme"
0 0 14 3 1 #"n"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 14 3 4 #"head"
0 0 14 3 3 #"-po"
0 0 14 3 1 #"s"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 19 3 2 #"\"u"
0 0 19 3 1 #"p"
0 0 19 3 1 #"\""
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 14 3 7 #"worm-ta"
0 0 14 3 1 #"i"
0 0 14 3 1 #"l"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 22 3 1 #"("
0 0 14 3 3 #"key"
0 0 14 3 1 #"="
0 0 14 3 1 #"?"
0 0 22 3 1 #" "
0 0 14 3 1 #"k"
0 0 14 3 1 #"e"
0 0 14 3 1 #"y"
0 0 22 3 1 #" "
0 0 19 3 4 #"\"dow"
0 0 19 3 1 #"n"
0 0 19 3 1 #"\""
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-wor"
0 0 14 3 1 #"l"
0 0 14 3 1 #"d"
0 0 22 3 1 #" "
0 0 14 3 2 #"fo"
0 0 14 3 1 #"o"
0 0 14 3 1 #"d"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"co"
0 0 14 3 1 #"n"
0 0 14 3 1 #"s"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-segme"
0 0 14 3 1 #"n"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 14 3 7 #"head-po"
0 0 14 3 1 #"s"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 19 3 4 #"\"dow"
0 0 19 3 1 #"n"
0 0 19 3 1 #"\""
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 14 3 7 #"worm-ta"
0 0 14 3 1 #"i"
0 0 14 3 1 #"l"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 22 3 1 #"("
0 0 14 3 3 #"key"
0 0 14 3 1 #"="
0 0 14 3 1 #"?"
0 0 22 3 1 #" "
0 0 14 3 1 #"k"
0 0 14 3 1 #"e"
0 0 14 3 1 #"y"
0 0 22 3 1 #" "
0 0 19 3 5 #"\"righ"
0 0 19 3 1 #"t"
0 0 19 3 1 #"\""
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-wor"
0 0 14 3 1 #"l"
0 0 14 3 1 #"d"
0 0 22 3 1 #" "
0 0 14 3 2 #"fo"
0 0 14 3 1 #"o"
0 0 14 3 1 #"d"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"co"
0 0 14 3 1 #"n"
0 0 14 3 1 #"s"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-segme"
0 0 14 3 1 #"n"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 14 3 7 #"head-po"
0 0 14 3 1 #"s"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 19 3 5 #"\"righ"
0 0 19 3 1 #"t"
0 0 19 3 1 #"\""
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 14 3 7 #"worm-ta"
0 0 14 3 1 #"i"
0 0 14 3 1 #"l"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 22 3 1 #"("
0 0 14 3 3 #"key"
0 0 14 3 1 #"="
0 0 14 3 1 #"?"
0 0 22 3 1 #" "
0 0 14 3 1 #"k"
0 0 14 3 1 #"e"
0 0 14 3 1 #"y"
0 0 22 3 1 #" "
0 0 19 3 4 #"\"lef"
0 0 19 3 1 #"t"
0 0 19 3 1 #"\""
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"make-wor"
0 0 14 3 1 #"l"
0 0 14 3 1 #"d"
0 0 22 3 1 #" "
0 0 14 3 2 #"fo"
0 0 14 3 1 #"o"
0 0 14 3 1 #"d"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"co"
0 0 14 3 1 #"n"
0 0 14 3 1 #"s"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"make-segme"
0 0 14 3 1 #"n"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 14 3 7 #"head-po"
0 0 14 3 1 #"s"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 19 3 4 #"\"lef"
0 0 19 3 1 #"t"
0 0 19 3 1 #"\""
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 14 3 7 #"worm-ta"
0 0 14 3 1 #"i"
0 0 14 3 1 #"l"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 2 #"el"
0 0 14 3 1 #"s"
0 0 14 3 1 #"e"
0 0 22 3 1 #" "
0 0 14 3 5 #"world"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #"]"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 22 #"; world state -> boole"
0 0 17 3 1 #"a"
0 0 17 3 1 #"n"
0 0 22 29 1 #"\n"
0 0 17 3 84
(
 #"; Determines whether the worm has collided with the walls of the env"
 #"ironment or itse"
) 0 0 17 3 1 #"l"
0 0 17 3 1 #"f"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 4 #"defi"
0 0 15 3 1 #"n"
0 0 15 3 1 #"e"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"check-all-collisio"
0 0 14 3 1 #"n"
0 0 14 3 1 #"s"
0 0 22 3 1 #" "
0 0 14 3 4 #"game"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 2 #"le"
0 0 15 3 2 #"t*"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 22 3 1 #"["
0 0 14 3 2 #"wo"
0 0 14 3 1 #"r"
0 0 14 3 1 #"m"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 8 #"world-wo"
0 0 14 3 1 #"r"
0 0 14 3 1 #"m"
0 0 22 3 1 #" "
0 0 14 3 4 #"game"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 7 #"worm-he"
0 0 14 3 1 #"a"
0 0 14 3 1 #"d"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"fir"
0 0 14 3 1 #"s"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 14 3 2 #"wo"
0 0 14 3 1 #"r"
0 0 14 3 1 #"m"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 7 #"worm-ta"
0 0 14 3 1 #"i"
0 0 14 3 1 #"l"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"re"
0 0 14 3 1 #"s"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 14 3 2 #"wo"
0 0 14 3 1 #"r"
0 0 14 3 1 #"m"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"posn"
0 0 14 3 1 #"-"
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"segment-po"
0 0 14 3 1 #"s"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"fir"
0 0 14 3 1 #"s"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 14 3 2 #"wo"
0 0 14 3 1 #"r"
0 0 14 3 1 #"m"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 1 #"y"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"posn"
0 0 14 3 1 #"-"
0 0 14 3 1 #"y"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"segment-po"
0 0 14 3 1 #"s"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"fir"
0 0 14 3 1 #"s"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 14 3 2 #"wo"
0 0 14 3 1 #"r"
0 0 14 3 1 #"m"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 2 #"co"
0 0 15 3 2 #"nd"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 22 3 1 #"("
0 0 14 3 1 #">"
0 0 14 3 1 #"="
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 14 3 8 #"WORLD-SI"
0 0 14 3 1 #"Z"
0 0 14 3 1 #"E"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 14 3 2 #"tr"
0 0 14 3 1 #"u"
0 0 14 3 1 #"e"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 22 3 1 #"("
0 0 14 3 1 #"<"
0 0 14 3 1 #"="
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 14 3 2 #"tr"
0 0 14 3 1 #"u"
0 0 14 3 1 #"e"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 22 3 1 #"("
0 0 14 3 1 #">"
0 0 14 3 1 #"="
0 0 22 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #" "
0 0 14 3 8 #"WORLD-SI"
0 0 14 3 1 #"Z"
0 0 14 3 1 #"E"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 14 3 2 #"tr"
0 0 14 3 1 #"u"
0 0 14 3 1 #"e"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 22 3 1 #"("
0 0 14 3 1 #"<"
0 0 14 3 1 #"="
0 0 22 3 1 #" "
0 0 14 3 1 #"y"
0 0 22 3 1 #" "
0 0 20 3 1 #"0"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 14 3 2 #"tr"
0 0 14 3 1 #"u"
0 0 14 3 1 #"e"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 2 #"el"
0 0 14 3 1 #"s"
0 0 14 3 1 #"e"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"check-segment-pos"
0 0 14 3 1 #"n"
0 0 14 3 1 #"*"
0 0 22 3 1 #" "
0 0 14 3 7 #"worm-he"
0 0 14 3 1 #"a"
0 0 14 3 1 #"d"
0 0 22 3 1 #" "
0 0 14 3 7 #"worm-ta"
0 0 14 3 1 #"i"
0 0 14 3 1 #"l"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 24 #"; segment, worm -> boole"
0 0 17 3 1 #"a"
0 0 17 3 1 #"n"
0 0 22 29 1 #"\n"
0 0 17 3 90
(
 #"; determines whether the segment is in the same location as any of t"
 #"he worm's other segmen"
) 0 0 17 3 1 #"t"
0 0 17 3 1 #"s"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 4 #"defi"
0 0 15 3 1 #"n"
0 0 15 3 1 #"e"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"check-segment-pos"
0 0 14 3 1 #"n"
0 0 14 3 1 #"*"
0 0 22 3 1 #" "
0 0 14 3 3 #"seg"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 14 3 4 #"worm"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 2 #"le"
0 0 15 3 2 #"t*"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 22 3 1 #"["
0 0 14 3 3 #"seg"
0 0 14 3 1 #"-"
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"posn"
0 0 14 3 1 #"-"
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"segment-po"
0 0 14 3 1 #"s"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 14 3 3 #"seg"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 3 #"seg"
0 0 14 3 1 #"-"
0 0 14 3 1 #"y"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"posn"
0 0 14 3 1 #"-"
0 0 14 3 1 #"y"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"segment-po"
0 0 14 3 1 #"s"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 14 3 3 #"seg"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 2 #"co"
0 0 15 3 2 #"nd"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 22 3 1 #"("
0 0 14 3 4 #"empt"
0 0 14 3 1 #"y"
0 0 14 3 1 #"?"
0 0 22 3 1 #" "
0 0 14 3 4 #"worm"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 14 3 3 #"fal"
0 0 14 3 1 #"s"
0 0 14 3 1 #"e"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 22 3 1 #"("
0 0 14 3 16 #"check-segment-po"
0 0 14 3 1 #"s"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 3 #"fir"
0 0 14 3 1 #"s"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 14 3 4 #"worm"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 14 3 3 #"seg"
0 0 14 3 1 #"-"
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 14 3 3 #"seg"
0 0 14 3 1 #"-"
0 0 14 3 1 #"y"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 14 3 2 #"tr"
0 0 14 3 1 #"u"
0 0 14 3 1 #"e"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 2 #"el"
0 0 14 3 1 #"s"
0 0 14 3 1 #"e"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"check-segment-pos"
0 0 14 3 1 #"n"
0 0 14 3 1 #"*"
0 0 22 3 1 #" "
0 0 14 3 3 #"seg"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 2 #"re"
0 0 14 3 1 #"s"
0 0 14 3 1 #"t"
0 0 22 3 1 #" "
0 0 14 3 4 #"worm"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 3 #"   "
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 17 3 36 #"; segment, integer, integer -> boole"
0 0 17 3 1 #"a"
0 0 17 3 1 #"n"
0 0 22 29 1 #"\n"
0 0 17 3 60
#"; determines whether the segment is at the designated locati"
0 0 17 3 1 #"o"
0 0 17 3 1 #"n"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 4 #"defi"
0 0 15 3 1 #"n"
0 0 15 3 1 #"e"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 16 #"check-segment-po"
0 0 14 3 1 #"s"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 14 3 3 #"seg"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 14 3 1 #"x"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 14 3 1 #"y"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 15 3 2 #"le"
0 0 15 3 2 #"t*"
0 0 22 29 1 #"\n"
0 0 22 3 4 #"    "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 22 3 1 #"["
0 0 14 3 3 #"seg"
0 0 14 3 1 #"-"
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"posn"
0 0 14 3 1 #"-"
0 0 14 3 1 #"x"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"segment-po"
0 0 14 3 1 #"s"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 14 3 3 #"seg"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 29 1 #"\n"
0 0 22 3 5 #"     "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"["
0 0 14 3 3 #"seg"
0 0 14 3 1 #"-"
0 0 14 3 1 #"y"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 4 #"posn"
0 0 14 3 1 #"-"
0 0 14 3 1 #"y"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 10 #"segment-po"
0 0 14 3 1 #"s"
0 0 14 3 1 #"n"
0 0 22 3 1 #" "
0 0 14 3 3 #"seg"
0 0 14 3 1 #"i"
0 0 14 3 1 #"n"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #"]"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 3 1 #" "
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"a"
0 0 14 3 1 #"n"
0 0 14 3 1 #"d"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 22 3 1 #" "
0 0 14 3 5 #"seg-x"
0 0 22 3 1 #" "
0 0 14 3 3 #"xin"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"="
0 0 22 3 1 #" "
0 0 14 3 5 #"seg-y"
0 0 22 3 1 #" "
0 0 14 3 3 #"yin"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 27 #"; testing check-segment-pos"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"check-segment-posn"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"make-segment"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 22 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 19 3 4 #"\"up\""
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 14 3 4 #"true"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 18 #"check-segment-posn"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 12 #"make-segment"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 22 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #" "
0 0 20 3 2 #"11"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 19 3 4 #"\"up\""
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #" "
0 0 20 3 2 #"10"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 14 3 5 #"false"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 14 #"; Posn -> Posn"
0 0 22 29 1 #"\n"
0 0 17 3 63
#"; Given a position, it generates a random, different position. "
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"food-create"
0 0 22 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 17 #"food-check-create"
0 0 22 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 9 #"make-posn"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"random"
0 0 22 3 1 #" "
0 0 14 3 9 #"GRID-SIZE"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 14 3 13 #"CELL-DIAMETER"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 3 34 #"                                  "
0 0 22 3 1 #"("
0 0 14 3 1 #"*"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"random"
0 0 22 3 1 #" "
0 0 14 3 9 #"GRID-SIZE"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 14 3 13 #"CELL-DIAMETER"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 1 #" "
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 18 #"; Posn Posn -> Pos"
0 0 17 3 1 #"n"
0 0 22 29 1 #"\n"
0 0 17 3 53 #"; Determines whether the old position is equal to the"
0 0 22 29 1 #"\n"
0 0 17 3 57 #"; new (candidate) position. If the old position is equal "
0 0 22 29 1 #"\n"
0 0 17 3 84
(
 #"; to the new position, generate a new one. Otherwise, return the can"
 #"didate position."
) 0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 15 3 6 #"define"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 17 #"food-check-create"
0 0 22 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 1 #" "
0 0 14 3 9 #"candidate"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 2 #"  "
0 0 22 3 1 #"("
0 0 14 3 2 #"if"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 6 #"equal?"
0 0 22 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 1 #" "
0 0 14 3 9 #"candidate"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 22 3 1 #"("
0 0 14 3 11 #"food-create"
0 0 22 3 1 #" "
0 0 14 3 1 #"p"
0 0 22 3 1 #")"
0 0 22 3 1 #" "
0 0 14 3 9 #"candidate"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 3 6 #"      "
0 0 22 29 1 #"\n"
0 0 17 3 18 #"; Create the world"
0 0 22 29 1 #"\n"
0 0 22 3 1 #"("
0 0 14 3 8 #"big-bang"
0 0 22 3 1 #" "
0 0 14 3 12 #"TEST-STATE-1"
0 0 22 29 1 #"\n"
0 0 22 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 7 #"on-tick"
0 0 22 3 1 #" "
0 0 14 3 12 #"update-world"
0 0 22 3 1 #" "
0 0 14 3 13 #"TICK-INTERVAL"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 6 #"on-key"
0 0 22 3 1 #" "
0 0 14 3 10 #"check-keys"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 7 #"to-draw"
0 0 22 3 1 #" "
0 0 14 3 12 #"render-world"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 3 10 #"          "
0 0 22 3 1 #"("
0 0 14 3 9 #"stop-when"
0 0 22 3 1 #" "
0 0 14 3 20 #"check-all-collisions"
0 0 22 3 1 #")"
0 0 22 3 1 #")"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 22 29 1 #"\n"
0 0 17 3 23 #"; TO DO (IN THIS ORDER)"
0 0 22 29 1 #"\n"
0 0 17 3 2 #"; "
0 0 17 3 1 #"F"
0 0 17 3 1 #"o"
0 0 17 3 1 #"o"
0 0 17 3 1 #"d"
0 0 17 3 1 #" "
0 0 17 3 1 #"g"
0 0 17 3 1 #"e"
0 0 17 3 1 #"n"
0 0 17 3 1 #"e"
0 0 17 3 1 #"r"
0 0 17 3 1 #"a"
0 0 17 3 1 #"t"
0 0 17 3 1 #"i"
0 0 17 3 1 #"o"
0 0 17 3 1 #"n"
0 0 22 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #" "
0 0 17 3 1 #" "
0 0 17 3 1 #"-"
0 0 17 3 1 #"g"
0 0 17 3 1 #"e"
0 0 17 3 1 #"n"
0 0 17 3 1 #"e"
0 0 17 3 1 #"r"
0 0 17 3 1 #"a"
0 0 17 3 1 #"t"
0 0 17 3 1 #"i"
0 0 17 3 1 #"o"
0 0 17 3 1 #"n"
0 0 17 3 1 #" "
0 0 17 3 1 #"o"
0 0 17 3 1 #"f"
0 0 17 3 1 #" "
0 0 17 3 1 #"l"
0 0 17 3 1 #"o"
0 0 17 3 1 #"c"
0 0 17 3 1 #"a"
0 0 17 3 1 #"t"
0 0 17 3 1 #"i"
0 0 17 3 1 #"o"
0 0 17 3 1 #"n"
0 0 17 3 1 #"s"
0 0 17 3 1 #" "
0 0 17 3 1 #"("
0 0 17 3 1 #"D"
0 0 17 3 1 #"O"
0 0 17 3 1 #"N"
0 0 17 3 1 #"E"
0 0 17 3 1 #")"
0 0 22 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #" "
0 0 17 3 1 #" "
0 0 17 3 1 #"-"
0 0 17 3 1 #"r"
0 0 17 3 1 #"e"
0 0 17 3 1 #"n"
0 0 17 3 1 #"d"
0 0 17 3 1 #"e"
0 0 17 3 1 #"r"
0 0 17 3 1 #"i"
0 0 17 3 1 #"n"
0 0 17 3 1 #"g"
0 0 17 3 1 #" "
0 0 17 3 1 #"o"
0 0 17 3 1 #"f"
0 0 17 3 1 #" "
0 0 17 3 1 #"f"
0 0 17 3 1 #"o"
0 0 17 3 1 #"o"
0 0 17 3 1 #"d"
0 0 22 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #" "
0 0 17 3 1 #" "
0 0 17 3 1 #"-"
0 0 17 3 1 #"c"
0 0 17 3 1 #"o"
0 0 17 3 1 #"l"
0 0 17 3 1 #"l"
0 0 17 3 1 #"i"
0 0 17 3 1 #"s"
0 0 17 3 1 #"i"
0 0 17 3 1 #"o"
0 0 17 3 1 #"n"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #"i"
0 0 17 3 1 #"t"
0 0 17 3 1 #"h"
0 0 17 3 1 #" "
0 0 17 3 1 #"f"
0 0 17 3 1 #"o"
0 0 17 3 1 #"o"
0 0 17 3 1 #"d"
0 0 22 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #" "
0 0 17 3 1 #" "
0 0 17 3 1 #"-"
0 0 17 3 1 #"g"
0 0 17 3 1 #"r"
0 0 17 3 1 #"o"
0 0 17 3 1 #"w"
0 0 17 3 1 #"i"
0 0 17 3 1 #"n"
0 0 17 3 1 #"g"
0 0 17 3 1 #" "
0 0 17 3 1 #"t"
0 0 17 3 1 #"h"
0 0 17 3 1 #"e"
0 0 17 3 1 #" "
0 0 17 3 1 #"w"
0 0 17 3 1 #"o"
0 0 17 3 1 #"r"
0 0 17 3 1 #"m"
0 0 22 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 1 #" "
0 0 17 3 1 #"G"
0 0 17 3 1 #"E"
0 0 17 3 14 #"T \317\237\306\230\306\246\306\226\327\237\327\237"
0 0 17 3 2 #"\316\243"
0 0 17 3 3 #"\342\234\230"
0 0 22 29 1 #"\n"
0 0 17 3 62
#"; ALSO USE GITHUB SO YOU DON'T END UP REDOING EVERYTHING AGAIN"
0           0
